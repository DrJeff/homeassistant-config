################################################################
## Packages / Grafana
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    script.grafana_webhook:
      friendly_name: "Grafana Webhook"
      haaska_hidden: true
      homebridge_hidden: true
      icon: mdi:webhook
      package: 'grafana'

################################################
## InfluxDB
################################################

influxdb:
  host: !secret influxdb_host
  port: !secret influxdb_port
  username: !secret influxdb_username
  password: !secret influxdb_password
  database: !secret influxdb_database
  default_measurement: state

################################################
## Panel Iframe
################################################

panel_iframe:
  grafana:
    title: 'Grafana'
    url: !secret panel_grafana_url
    icon: mdi:chart-pie

################################################
## Script
################################################

script:
  grafana_webhook:
    sequence:
      - condition: template
        value_template: >-
          {{ state != 'ok' and state != 'no_data' }}
      - service: notify.syslog
        data_template:
          message: >
            ruleId="{{ ruleId }}",
            title="{{ title }}",
            ruleUrl="{{ ruleUrl }}",
            imageUrl="{{ imageUrl }}",
            state="{{ state }}",
            message="{{ message }}",
            ruleName="{{ ruleName }}",
            evalMatches="{{ evalMatches|pprint }}"
      - service: notify.telegram
        data_template:
          message: >-
            {{ ruleName }} is {{ state }}.
            {% for match in evalMatches %}
              {{ match.metric }}: {{ match.value }}
            {% endfor %}
